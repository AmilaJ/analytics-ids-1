<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>he_msisdn_not_found_stat_analytics</Name>
    <Script>
        create temporary table com_wso2telco_userstatus_he_msisdn_not_found using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS", schema "sessionID STRING,status STRING,sourceIP STRING,forwardedIP STRING,_timestamp LONG -i", incrementalParams "user_status_he_msisdn_not_found, DAY");

        create temporary table com_wso2telco_userstatus_meta_he_msisdn_not_found using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS_META", schema "sessionID STRING,sourceIP STRING,operator STRING,appId STRING,msisdn STRING,isMSISDNHeader BOOLEAN,userAgent STRING,consumerKey STRING,state STRING,nonce STRING,scope STRING,acrValue STRING,loginHint STRING,isNewUser BOOLEAN,telcoScope STRING,status STRING,_timestamp LONG -i", incrementalParams "user_status_meta_he_msisdn_not_found, DAY");

        create temporary table com_wso2telco_summary_he_msisdn_not_found using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_HE_MSISDN_HEADER_INVALID",schema "operator STRING -i, sessionID STRING -i, msisdn STRING -i, sourceIP STRING -i, appId STRING -i, timestring STRING -i, _timestamp LONG -i", primaryKeys "iprangecheck,operator,sessionID,sourceIP,_timestamp,", mergeSchema "false");

        INSERT INTO TABLE com_wso2telco_summary_he_msisdn_not_found
        select operator, sessionID , msisdn, sourceIP, appId,  timestring, _timestamp
        from (
            select first(operator) as operator, sessionID , first(msisdn) as msisdn, first(sourceIP) as sourceIP, first(appId) as appId, getFormattedTimeString(first(_timestamp)) as timestring, first(_timestamp) as _timestamp
            from (
                select operatorforward.sessionID, operatorforward.operator, operatorforward.msisdn, operatorforward.sourceIP, operatorforward.appId, _timestamp
                from
                (
                    select ustatus.sessionID, ustatus.sourceIP, meta.operator, meta.msisdn, meta.appId, ustatus._timestamp
                    from(
                        select sessionID
                        from
                        (
                            select distinct sessionID
                            from com_wso2telco_userstatus_he_msisdn_not_found
                            where status='HE_AUTH_PROCESSING_FAIL' and sourceIP != 'null'
                            EXCEPT
                                select distinct sessionID
                                from com_wso2telco_userstatus_he_msisdn_not_found
                                where status='IP_HEADER_NOT_FOUND' or status = 'IP_HEADER_NOT_IN_RANGE'
                        ) as heFailed
                            EXCEPT
                                select distinct sessionID
                                from com_wso2telco_userstatus_meta_he_msisdn_not_found
                                where isMSISDNHeader = true
                    ) as hefailed_msisdnnotfound INNER JOIN
                        (
                            select sessionID, first(operator) as operator, min(msisdn) as msisdn, first(appId) as appId
                            from com_wso2telco_userstatus_meta_he_msisdn_not_found
                            where operator IS NOT NULL group by sessionID
                        ) as meta on meta.sessionID = hefailed_msisdnnotfound.sessionID
                        INNER JOIN
                        (
                            select sessionID, max(sourceIP) as sourceIP, min(_timestamp) as _timestamp
                            from com_wso2telco_userstatus_he_msisdn_not_found
                            group by sessionID
                        ) as ustatus on ustatus.sessionID = hefailed_msisdnnotfound.sessionID
                    )as operatorforward
                )as iprangecheck group by sessionID
            )as he_msisdn_not_found_report;

        INCREMENTAL_TABLE_COMMIT user_status_he_msisdn_not_found;
    </Script>
    <CronExpression>0 0 0 1/1 * ? *</CronExpression>
</Analytics>

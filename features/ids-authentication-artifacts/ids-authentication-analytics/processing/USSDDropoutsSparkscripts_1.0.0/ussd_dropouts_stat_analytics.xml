<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>ussd_dropouts_stat_analytics</Name>
    <Script>
		create temporary table user_status_raw_ussd_dropouts using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS", schema "sessionID STRING,status STRING,sourceIP STRING,forwardedIP STRING,_timestamp LONG -i",  incrementalParams "user_status_ussd_droputs, DAY");

        create temporary table user_status_meta_raw_ussd_dropouts using CarbonAnalytics options (tableName "COM_WSO2TELCO_USERSTATUS_META", schema "sessionID STRING,sourceIP STRING,operator STRING,appId STRING,msisdn STRING,isMSISDNHeader BOOLEAN,userAgent STRING,consumerKey STRING,state STRING,nonce STRING,scope STRING,acrValue STRING,loginHint STRING,isNewUser BOOLEAN,telcoScope STRING,status STRING,_timestamp LONG -i",  incrementalParams "user_status_meta_ussd_droputs, DAY");

        create temporary table ussd_dropout_summary using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_USSD_DROPOUTS", schema "day STRING -i, operator STRING -i -f, appID STRING -i -f, total_droputs LONG -i, _timestamp LONG -i", primaryKeys "day, operator, appID", incrementalParams "ussd_dropouts, DAY", mergeSchema "false");

        create temporary table ussd_dropouts_app using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_APP_USSD_DROPOUTS", schema "day STRING -i, appID STRING -i -f, total_droputs LONG -i, _timestamp LONG -i", primaryKeys "day, appID");

        create temporary table ussd_dropouts_operator using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_OPERATOR_USSD_DROPOUTS", schema "day STRING -i, operator STRING -i -f, total_droputs LONG -i,  _timestamp LONG -i", primaryKeys "day, operator");

        create temporary table ussd_dropouts_total using CarbonAnalytics options (tableName "COM_WSO2TELCO_SUMMARY_TOTAL_USSD_DROPOUTS", schema "day STRING -i, total_droputs LONG -i, _timestamp LONG -i", primaryKeys "day");


        INSERT INTO TABLE ussd_dropout_summary SELECT day,min(operator) as operator,min(appId) as appId, sum(total_droputs) as total_droputs, min(_timestamp) as _timestamp FROM (select getDateString(meta._timestamp) as day,meta.operator as operator,meta.appId as appId, (coalesce(push.push_count,0) -  coalesce(ignore.ignore_count,0)) as total_droputs, meta._timestamp as _timestamp  from (select sessionID, count(*) as push_count from user_status_raw_ussd_dropouts where status ='SEND_USSD_PUSH' group by sessionID) as push left join (select sessionID, count(*) as ignore_count from user_status_raw_ussd_dropouts where  status in ('LOGIN_SUCCESS','SEND_SMS') group by sessionID) as ignore on push.sessionID=ignore.sessionID  left join user_status_meta_raw_ussd_dropouts as meta on push.sessionID=meta.sessionID)as final GROUP BY day;

        INSERT INTO TABLE ussd_dropouts_app SELECT day, appID, SUM(total_droputs), min(_timestamp) as _timestamp FROM ussd_dropout_summary GROUP BY day, appID;

        INSERT INTO TABLE ussd_dropouts_operator SELECT day, operator, SUM(total_droputs), min(_timestamp) as _timestamp FROM ussd_dropout_summary GROUP BY day, operator;

        INSERT INTO TABLE ussd_dropouts_total SELECT day, SUM(total_droputs), min(_timestamp) as _timestamp FROM ussd_dropout_summary GROUP BY day;

        INCREMENTAL_TABLE_COMMIT user_status_ussd_droputs;
        INCREMENTAL_TABLE_COMMIT user_status_meta_ussd_droputs;
        INCREMENTAL_TABLE_COMMIT ussd_dropouts;
    </Script>
    <CronExpression>0 0 0 1/1 * ? *</CronExpression>
</Analytics>
